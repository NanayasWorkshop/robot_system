# fabrik_solver_block.info.yml
name: "FABRIK Solver Block"
description: "Main FABRIK solver orchestrating backward/forward cycles until convergence"
version: "1.0"
category: "orchestrator_block"
level: 3

inputs:
  - name: "target_position"
    type: "Eigen::Vector3d"
    description: "Target position for end-effector"
    constraints: "Any 3D position within robot workspace"
  - name: "initial_joint_positions"
    type: "std::optional<std::vector<Eigen::Vector3d>>"
    description: "Custom initial joint positions (optional - defaults to straight-up chain)"
    constraints: "If provided, must be valid joint configuration"
  - name: "num_robot_segments"
    type: "int"
    description: "Number of robot segments to create"
    constraints: "Positive integer, defaults to DEFAULT_ROBOT_SEGMENTS (7)"
  - name: "tolerance"
    type: "double"
    description: "Convergence tolerance for end-effector accuracy"
    constraints: "Positive value, defaults to FABRIK_TOLERANCE (0.01mm)"
  - name: "max_iterations"
    type: "int"
    description: "Maximum number of backward+forward cycles"
    constraints: "Positive integer, defaults to FABRIK_MAX_ITERATIONS (100)"

outputs:
  - name: "final_joint_positions"
    type: "std::vector<Eigen::Vector3d>"
    description: "Final solved joint chain with base at origin"
  - name: "achieved_position"
    type: "Eigen::Vector3d"
    description: "Actual end-effector position achieved"
  - name: "converged"
    type: "bool"
    description: "Whether algorithm converged to target within tolerance"
  - name: "final_error"
    type: "double"
    description: "Distance between target and achieved position"
  - name: "total_iterations"
    type: "int"
    description: "Total number of backward+forward cycles performed"
  - name: "solve_time_ms"
    type: "double"
    description: "Total time taken to solve in milliseconds"

dependencies:
  - "core/constants.hpp"
  - "core/timing.hpp"
  - "blocks/fabrik_initialization_block.hpp"
  - "blocks/fabrik_backward_block.hpp"
  - "blocks/fabrik_forward_block.hpp"
  - "Eigen/Dense"

constants_used:
  - "DEFAULT_ROBOT_SEGMENTS (7)"
  - "FABRIK_TOLERANCE (0.01)"
  - "FABRIK_MAX_ITERATIONS (100)"

internal_blocks:
  - "FabrikInitializationBlock"
  - "FabrikBackwardBlock"
  - "FabrikForwardBlock"

performance:
  typical_time_range: "1-50ms (depends on target complexity and convergence)"

algorithm:
  initialization:
    - "Initialize joint chain using FabrikInitializationBlock"
    - "Calculate initial segment lengths from joint positions"
    - "Check if already at target (early exit optimization)"
  
  convergence_loop:
    - "For each iteration (up to max_iterations):"
    - "  1. Backward pass: Move end-effector to target (base drifts)"
    - "  2. Forward pass: Fix base at origin, recalculate segment lengths"
    - "  3. Update joint positions and segment lengths for next iteration"
    - "  4. Check convergence: end-effector within tolerance of target"
    - "  5. Break if converged, continue if not"
  
  convergence_criteria:
    - "End-effector position within tolerance of target"
    - "Base automatically at origin after every forward pass"
    - "Algorithm always ends on forward pass (guarantees base constraint)"

segment_length_strategy:
  description: "Dynamic segment length recalculation"
  approach: "Use updated segment lengths from each forward pass for next backward pass"
  importance: "Critical for convergence - maintains robot kinematic constraints"

error_handling:
  unreachable_targets: "Algorithm approaches as close as possible, stops at max_iterations"
  oscillation: "Max iteration limit prevents infinite loops"
  initialization_failure: "Returns failed result with empty positions"
  calculation_errors: "Graceful degradation with error result"

convergence_behavior:
  early_exit: "If initial position already at target within tolerance"
  normal_convergence: "Backward-forward cycles until end-effector reaches target"
  max_iterations: "Returns best achieved position even if not converged"
  always_valid_base: "Base guaranteed at origin in final result"

notes:
  - "Level 3 orchestrator block - highest level FABRIK interface"
  - "Simplified design focused on essential functionality"
  - "Uses all default parameters from constants.hpp for ease of use"
  - "Always ends on forward pass to guarantee base constraint satisfaction"
  - "Dynamic segment length updates enable convergence with robot kinematics"
  - "Robust error handling prevents crashes on invalid inputs"
  - "Single timing measurement covers entire solve process"
  - "Suitable for real-time robot control applications"